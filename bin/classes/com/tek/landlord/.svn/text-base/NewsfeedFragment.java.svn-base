package com.tek.landlord;

import android.database.Cursor;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.ListFragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.Toast;

import com.tek.landlord.adapter.NewsfeedListAdapter;
import com.tek.landlord.dao.NewsfeedDao;
import com.tek.landlord.domain.NewsfeedItem.NewsfeedEntry;
import com.tek.landlord.domain.NewsfeedType;
import com.tek.landlord.property.AddPropertyWizard;

public class NewsfeedFragment extends ListFragment {

    private static final int ID_ADD = 1;
    private static final int ID_ACCEPT = 2;
    private static final int ID_EDIT = 3;

    QuickAction mQuickAction;

    private NewsfeedDao newsfeedDao;

    ActionItem addItem;
    ActionItem acceptItem;
    ActionItem editItem;
    
    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        initNewsfeed();
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        this.newsfeedDao.close();
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.newsfeed_fragment, container, false);
    }

    private void initNewsfeed() {
    	addItem = new ActionItem(ID_ADD, "Add Property", getResources().getDrawable(R.drawable.plus_large));
    	acceptItem = new ActionItem(ID_ACCEPT, "Dismiss", getResources().getDrawable(R.drawable.ok));
    	editItem = new ActionItem(ID_EDIT, "Edit", getResources().getDrawable(R.drawable.document));
        this.newsfeedDao = new NewsfeedDao(getActivity());
        this.newsfeedDao.open();
        Cursor cursor = this.newsfeedDao.getNewsfeedItems();
        NewsfeedListAdapter adapter = new NewsfeedListAdapter(getActivity(), cursor);
        setListAdapter(adapter);

//        ActionItem addItem = new ActionItem(ID_ADD, "Paid", getResources().getDrawable(R.drawable.ok));
//        ActionItem acceptItem = new ActionItem(ID_ACCEPT, "Partial", getResources().getDrawable(R.drawable.calculator));
//        ActionItem uploadItem = new ActionItem(ID_UPLOAD, "Remind Tenant", getResources().getDrawable(R.drawable.notification));

        this.mQuickAction = new QuickAction(this.getActivity(), QuickAction.HORIZONTAL);

//        this.mQuickAction.addActionItem(addItem);
//        this.mQuickAction.addActionItem(acceptItem);
//        this.mQuickAction.addActionItem(uploadItem);

        // setup the action item click listener
        this.mQuickAction.setOnActionItemClickListener(new QuickAction.OnActionItemClickListener() {

            public void onItemClick(QuickAction quickAction, int pos, int actionId) {
                ActionItem actionItem = quickAction.getActionItem(pos);
                if (actionId == ID_ADD) {
                    FragmentManager fragmentManager = getFragmentManager();
                    fragmentManager.beginTransaction().replace(R.id.container, new AddPropertyWizard()).commit();
                } else {
                    Toast.makeText(NewsfeedFragment.this.getActivity(), actionItem.getTitle() + " selected", Toast.LENGTH_SHORT).show();
                }
            }
        });

        this.mQuickAction.setOnDismissListener(new QuickAction.OnDismissListener() {

            public void onDismiss() {
                //Toast.makeText(NewsfeedFragment.this.getActivity(), "Ups..dismissed", Toast.LENGTH_SHORT).show();
            }
        });
    }

    @Override
    public void onListItemClick(ListView l, View view, int position, long id) {
    	
    	Cursor c = ((NewsfeedListAdapter)l.getAdapter()).getCursor();
    	c.moveToPosition(position);
    	Integer newsfeedRowType = c.getInt(c.getColumnIndexOrThrow(NewsfeedEntry.COLUMN_NAME_TYPE));
         mQuickAction.clearActionItems();
         switch (newsfeedRowType) {
         case NewsfeedType.APPLICATION_MESSAGE_ID :
        	  this.mQuickAction.addActionItem(addItem);
              this.mQuickAction.addActionItem(acceptItem);
              break;
         case NewsfeedType.NEW_PROPERTY_ADDED_ID :
        	   this.mQuickAction.addActionItem(editItem);
        	   this.mQuickAction.addActionItem(acceptItem);
        	   break;
         }
        
         this.mQuickAction.show(view);
    }
}
